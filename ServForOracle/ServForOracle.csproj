<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net461</TargetFramework>
    <PackageId>ServForOracle</PackageId>
    <Version>7.6.1</Version>
    <Title>ServForOracle - Oracle Package and Type wrapper for .NET</Title>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <Authors>Roy Sánchez</Authors>
    <Description>A wrapper over Oracle native ODP.NET to make easier the calls to packages and the use of UDTs (User Define Types)</Description>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <Copyright>Copyright 2018 (c) Roy Sanchez. All rights reserved.</Copyright>
    <Platforms>AnyCPU;x64</Platforms>
    <PackageReleaseNotes>
      Fixes the mapping between the proxy and user types, there were several issues with the old flow that were corrected. It should now be able to handle all the different POCOs
    </PackageReleaseNotes>
    <RepositoryUrl>https://github.com/roysanchez/ServForOracle/</RepositoryUrl>
    <PackageProjectUrl>https://github.com/roysanchez/ServForOracle/</PackageProjectUrl>
    <PackageTags>Oracle; ODP.NET Native; Oracle UDT</PackageTags>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
    <LangVersion>7.3</LangVersion>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" />
  <ItemGroup>
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.0.0-beta-63127-02" PrivateAssets="All" />
    <PackageReference Include="Microsoft.CSharp" Version="4.5.0" />
    <PackageReference Include="Oracle.DataAccess">
      <ExcludeAssets>All</ExcludeAssets>
    </PackageReference>
    <PackageReference Include="System.ValueTuple" Version="4.5.0" />
  </ItemGroup>
  <!--<ItemGroup>
    <Content Include="..\OracleDlls\x64\Oracle.DataAccess.dll">
      <PackagePath>lib\net461\x64\Oracle.DataAccess.dll</PackagePath>
    </Content>
    <Content Include="..\OracleDlls\x64\oraociei11.dll">
      <PackagePath>build\x64\oraociei11.dll</PackagePath>
    </Content>
    <Content Include="..\OracleDlls\x64\OraOps11w.dll">
      <PackagePath>build\x64\OraOps11w.dll</PackagePath>
    </Content>
    <Content Include="..\OracleDlls\x64\oci.dll">
      <PackagePath>build\x64\oci.dll</PackagePath>
    </Content>
    <Content Include="..\OracleDlls\x86\Oracle.DataAccess.dll">
      <PackagePath>lib\net461\x86\Oracle.DataAccess.dll</PackagePath>
    </Content>
    <Content Include="..\OracleDlls\x86\oraociei11.dll">
      <PackagePath>build\x86\oraociei11.dll</PackagePath>
    </Content>
    <Content Include="..\OracleDlls\x86\OraOps11w.dll">
      <PackagePath>build\x86\OraOps11w.dll</PackagePath>
    </Content>
    <Content Include="..\OracleDlls\x86\oci.dll">
      <PackagePath>build\x86\oci.dll</PackagePath>
    </Content>
    <Content Include="build\ServForOracle.targets">
      <PackagePath>build\ServForOracle.targets</PackagePath>
    </Content>
  </ItemGroup>-->
  <ItemGroup>
    <Reference Include="Oracle.DataAccess" Condition="($(Platform) == 'AnyCPU' OR $(Platform) == 'x64')">
      <HintPath>..\OracleDlls\x64\Oracle.DataAccess.dll</HintPath>
    </Reference>
    <Reference Include="Oracle.DataAccess" Condition="($(Platform) == 'x86')">
      <HintPath>..\OracleDlls\x86\Oracle.DataAccess.dll</HintPath>
    </Reference>
  </ItemGroup>
  <Target Name="CopyODP" AfterTargets="Build">
    <Message Text="Copying Oracle's ODP.NET DLLs to the output directory" Importance="high" />
    <ItemGroup Condition="($(Platform) == 'AnyCPU' OR $(Platform) == 'x86')">
      <_OracleDlls Include="$(SolutionDir)\OracleDlls\x86\*.*" />
    </ItemGroup>
    <ItemGroup Condition="$(Platform) == 'x64'">
      <_OracleDlls Include="$(SolutionDir)\OracleDlls\x64\*.*" />
    </ItemGroup>
    <Copy SourceFiles="@(_OracleDlls)" DestinationFolder="$(OutputPath)" />
  </Target>
</Project>